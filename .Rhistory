shiny::runApp('code/R/mastering_shiny')
library(shiny); runApp('code/R/mastering_shiny/book apps/Your first Shiny app/Exercise apps/multiplier.R')
runApp('code/R/mastering_shiny/book apps/Your first Shiny app/Exercise apps/multiplier.R')
library(shiny); runApp('code/R/mastering_shiny/book apps/Your first Shiny app/Exercise apps/input_multiplier.R')
library(shiny); runApp('code/R/mastering_shiny/book apps/Your first Shiny app/Exercise apps/reactive_expressions.R')
runApp('code/R/mastering_shiny/book apps/Your first Shiny app/Exercise apps/reactive_expressions.R')
library(shiny); runApp('code/R/mastering_shiny/book apps/Your first Shiny app/Exercise apps/fix_bugs.R')
library(shiny); runApp('code/R/mastering_shiny/book apps/Your first Shiny app/Exercise apps/fix_bugs.R')
data <- data.frame(initialDiagnose = c("01-02-2009","01/04/2009","15-Jan-2019", "12-12-2020","14.01.2009", "9/22/2005", "22 April 2022", "27-Mar-22",
"4/21/2010", "28.01.2010", "09.01.2009", "3/28/2005",
"04.01.2005", "04.01.2005", "9/17/2010", "03 01 2010"))
formats <- c("%d-%m-%Y", "%d/%m/%Y", "%d-%b-%Y", "%m/%d/%Y", "%d %B %Y", "%d-%b-%y")
data %>% mutate_all( ~parse_date_time(., orders = formats)) %>%
mutate_all(~format(., "%Y-%b-%d"))
library(tidyverse)
formats <- c("%d-%m-%Y", "%d/%m/%Y", "%d-%b-%Y", "%m/%d/%Y", "%d %B %Y", "%d-%b-%y")
data %>% mutate_all( ~parse_date_time(., orders = formats)) %>%
mutate_all(~format(., "%Y-%b-%d"))
library(lubridate)
formats <- c("%d-%m-%Y", "%d/%m/%Y", "%d-%b-%Y", "%m/%d/%Y", "%d %B %Y", "%d-%b-%y")
data %>% mutate_all( ~parse_date_time(., orders = formats)) %>%
mutate_all(~format(., "%Y-%b-%d"))
formats <- c("%d-%m-%Y", "%d/%m/%Y", "%d-%b-%Y", "%m/%d/%Y", "%d %B %Y", "%d-%b-%y")
data %>% mutate_all( ~parse_date_time(., orders = formats)) %>%
mutate_all(~format(., "%Y-%m-%d"))
Africa_new <- read.csv("/home/musebe/Downloads/Africa.csv", header = TRUE, na.strings = "")
Africa_new %>%
mutate_all( ~parse_date_time(event_date, orders = formats)) %>%
mutate_all(~format(event_date, "%Y-%m-%d"))
data <- Africa_new$event_date
data
data %>% mutate_all( ~parse_date_time(., orders = formats)) %>%
mutate_all(~format(., "%Y-%m-%d"))
shiny::runApp('code/R/mastering_shiny/book apps/Basic UI')
library(shiny)
library(shiny); runApp('code/R/mastering_shiny/book apps/Basic UI/exercise_1.R')
?textInput
library(shiny); runApp('code/R/mastering_shiny/book apps/Basic UI/exercise_1.R')
runApp('code/R/mastering_shiny/book apps/Basic UI/exercise_1.R')
library(tidyverse)
library(lubridate)
library(plotly)
# data input:-- (to be removed)
Africa_new <- read.csv("/home/musebe/Downloads/Africa.csv", header = TRUE, na.strings = "")
Africa_new %>%
mutate(WK = paste("WK",lubridate::isoweek(as.Date(event_date)), sep = ""),
Day = weekdays(as.Date(event_date), abbreviate = T),
.after = "year") %>%
filter(country == 'Somalia', event_type  %in% c('Protests', 'Riots'), year == '2020', WK %in% c("WK7", "WK8", "WK9", "WK10")) %>%
group_by(WK, sub_event_type) %>%
count() %>%
plot_ly(x = ~WK, y = ~n,
color = ~sub_event_type,
colors = color,
type = "bar",
text = ~n, textposition = 'inside',
textfont = list(color = '#ffffff')) %>%
layout(plot_bgcolor='#f6f6f6',paper_bgcolor='#f6f6f6',
font = list(family = "calibri",
size = 12),
xaxis = list(
title = "Week", zeroline = FALSE),
yaxis = list(title = "Count",zeroline = FALSE),
legend = list(orientation = "h",   # show entries horizontally
xanchor = "center",  # use center of legend as anchor
x = 0.5,
font = list(size = 15)))
color = c('#bfbebe', '#4a3241', '#535352', '#c294b1', '#2c1429', '#7e6070', '#a68196')
Africa_new %>%
mutate(WK = paste("WK",lubridate::isoweek(as.Date(event_date)), sep = ""),
Day = weekdays(as.Date(event_date), abbreviate = T),
.after = "year") %>%
filter(country == 'Somalia', event_type  %in% c('Protests', 'Riots'), year == '2020', WK %in% c("WK7", "WK8", "WK9", "WK10")) %>%
group_by(WK, sub_event_type) %>%
count() %>%
plot_ly(x = ~WK, y = ~n,
color = ~sub_event_type,
colors = color,
type = "bar",
text = ~n, textposition = 'inside',
textfont = list(color = '#ffffff')) %>%
layout(plot_bgcolor='#f6f6f6',paper_bgcolor='#f6f6f6',
font = list(family = "calibri",
size = 12),
xaxis = list(
title = "Week", zeroline = FALSE),
yaxis = list(title = "Count",zeroline = FALSE),
legend = list(orientation = "h",   # show entries horizontally
xanchor = "center",  # use center of legend as anchor
x = 0.5,
font = list(size = 15)))
shiny::runApp('code/R/mastering_shiny/book apps/Basic Reactivity')
runApp()
runApp('code/R/mastering_shiny/book apps/Basic Reactivity')
runApp('code/R/mastering_shiny/book apps/Basic Reactivity/exercise_1.R')
runApp('exercise_1.R')
runApp('code/R/mastering_shiny/book apps/Basic Reactivity/exercise_1.R')
runApp('exercise_1.R')
runApp('code/R/mastering_shiny/book apps/Basic Reactivity/exercise_1.R')
runApp('exercise_1.R')
runApp('code/R/mastering_shiny/book apps/Basic Reactivity/exercise_1.R')
library(shiny); runApp('code/R/mastering_shiny/book apps/Basic Reactivity/exercise_1b.R')
runApp('code/R/mastering_shiny/book apps/Basic Reactivity/exercise_1b.R')
runApp('code/R/mastering_shiny/book apps/Basic Reactivity/exercise_1b.R')
library(shiny); runApp('code/R/mastering_shiny/book apps/Basic Reactivity/exercise_1c.R')
library(shiny); runApp('code/R/mastering_shiny/book apps/Basic Reactivity/exercise_2a.R')
runApp('code/R/mastering_shiny/book apps/Basic Reactivity/exercise_2a.R')
shiny::runApp('code/R/AcledApp')
library(sf)
library(ggplot2)
library(tmap)
library(tmaptools)
library(leaflet)
library(leaflet.providers)
cva <- read.csv(
"/home/musebe/Downloads/protests_17.csv",
header = TRUE,
na.strings = "")
ke <- st_read("/home/musebe/Downloads/My Files Ivan/my other files/code/R/Kenya/Kenya Provinces/KEN_adm0.shp",stringsAsFactors = FALSE)
level_1 <- st_read("/home/musebe/Downloads/My Files Ivan/my other files/code/R/Kenya/Kenya Provinces/KEN_adm1.shp", stringsAsFactors = FALSE)
nairobi <- level_1[which(level_1$NAME_1 == "Nairobi"),]
nai_csv <- cva[which(cva$admin1 == "Nairobi"),]
leaflet(cva) %>%
addTiles() %>%
addPolygons(data = ke, # borders of province
color = "black",
fillOpacity = 0,
fillColor = 'red',
weight = 2,
opacity = 1) %>%
addHeatmap(~longitude, ~latitude) %>%
addCircles(lng = ~longitude, lat = ~latitude,
radius = .5, opacity = .2, col = "blue")
library(leaflet.extras)
leaflet(cva) %>%
addTiles() %>%
addPolygons(data = ke, # borders of province
color = "black",
fillOpacity = 0,
fillColor = 'red',
weight = 2,
opacity = 1) %>%
addHeatmap(~longitude, ~latitude) %>%
addCircles(lng = ~longitude, lat = ~latitude,
radius = .5, opacity = .2, col = "blue")
leaflet(nai_csv) %>%
addTiles() %>%
addPolygons(data = nairobi, # borders of province
color = "black",
fillOpacity = 0,
fillColor = 'red',
weight = 2,
opacity = 1) %>%
addHeatmap(~longitude, ~latitude) %>%
addCircles(lng = ~longitude, lat = ~latitude,
radius = .5, opacity = .2, col = "blue")
setwd("~/code/R/mastering_shiny")
library(shiny); runApp('book apps/Basic Reactivity/exercise_2b.R')
